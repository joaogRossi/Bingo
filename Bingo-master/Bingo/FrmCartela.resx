<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Vv4H5gvFQ5t431cAAAAASUVORK5CYII=
</value>
  </data>
</root>